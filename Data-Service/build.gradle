plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'pwr.smart.home.data'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':Common-Code')

	// Spring dependencies
	implementation "org.springframework.boot:spring-boot-starter-validation:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springVersion}"
	implementation "org.springframework.security:spring-security-oauth2-jose:${springJoseVersion}"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-security:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${springCloudVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.7'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'

	// Jackson
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

	// Postgresql
	runtimeOnly "org.postgresql:postgresql:${postresConnectorVersion}"

	// lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	// Annotation Processors
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// Testing
	testImplementation "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springVersion}"
	testImplementation "org.springframework.security:spring-security-test:${springSecurityTestVersion}"
	testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
