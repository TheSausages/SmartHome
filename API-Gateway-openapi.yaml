openapi: "3.0.3"
info:
  title: "SmartHome API Gateway"
  description: "There are /data endpoints and /control endpoints.<br>For local enviroments the URLs are: <br>https://localhost:8081/api/data<br>https://localhost:8080/api/control"
  version: "0.1.0"

paths:
  /lastAirConditionerMeasurement:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Temperature Sensor (/api/data)
      summary: "Last Measurement"
      operationId: "getLastAirConditionerMeasurement"
      parameters:
        - name: "sensorSerialNumber"
          in: "query"
          required: true
          example: HIBWCDUIYHWASDAE
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Temperature'
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: string
              example: Incompatible sensor
        "401":
          description: "Unauthorized"
          content:
            text/plain:
              schema:
                type: string
              example: This is not your sensor!


  /lastAirFilterMeasurements:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Air Quality Sensor (/api/data)
      summary: "Last Measurement"
      operationId: "getLastAirFilterMeasurements"
      parameters:
        - name: "sensorSerialNumber"
          in: "query"
          required: true
          example: HIBWCDUIYHWASDAD
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirQuality'
                example:
                  - id: 1
                    type: IAI
                    value: 5
                    createdAt: "2022-11-08 21:07:44"
                    "sensorId": 1
                  - id: 2
                    type: PM25
                    value: 12
                    createdAt: "2022-11-08 21:07:44"
                    sensorId": 1
                  - id: 3
                    type: GAS
                    value: 12
                    createdAt: "2022-11-08 21:07:44"
                    "sensorId": 1
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: string
              example: Incompatible sensor
        "401":
          description: "Unauthorized"
          content:
            text/plain:
              schema:
                type: string
              example: This is not your sensor!



  /lastAirHumidifierMeasurement:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Humidity Sensor (/api/data)
      summary: "Last Measurement"
      operationId: "getLastAirHumidifierMeasurement"
      parameters:
        - name: "sensorSerialNumber"
          in: "query"
          required: true
          example: HIBWCDUIYHWASDAF
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Humidity'
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: string
              example: Incompatible sensor
        "401":
          description: "Unauthorized"
          content:
            text/plain:
              schema:
                type: string
              example: This is not your sensor!
  /measurements:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Historical measurements
      summary: "Measurements between dates"
      operationId: "getMeasurementsBetweenDates"
      parameters:
        - name: "sensorSerialNumber"
          in: "query"
          required: true
          example: HIBWCDUIYHWASDAF
          schema:
            type: "string"
        - name: "fromDate"
          in: "query"
          required: true
          example: 2022-11-20 18:28:49.935
          schema:
            type: "string"
        - name: "toDate"
          in: "query"
          required: true
          example: 2022-11-20 18:29:30.353
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
              example:
                "id": 1,
                "name": "PWR",
                "street": "STANISŁAWA WYSZYŃSKIEGO 27",
                "city": "WROCŁAW",
                "postCode": "50-370",
                "country": "POLSKA",
                "longitude": 17.060911,
                "latitude": 51.10748,
                "preferredTemp": 21,
                "preferredHum": 45
        "401":
          description: "Unauthorized"
          content:
            text/plain:
              schema:
                type: string
              example: This is not your sensor!
  /home:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Historical measurements
      summary: "Home info"
      operationId: "getHome"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                type: string
              example: Wrong house
  /homeSensors:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Get all sensors in home
      summary: "Sensors in home"
      operationId: "getHomeSensors"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
                example:
                  - "id": 1,
                    "type": "AIR_POLLUTION",
                    "name": "Dual Scan AC3858/51",
                    "manufacturer": "PHILIPS",
                    "serialNumber": "HIBWCDUIYHWASDAD",
                    "createdAt": "2022-11-01",
                    "connected": true,
                    "homeId": 1
                  - "id": 2,
                    "type": "TEMPERATURE",
                    "name": "Klimatyzator ścienny ECO KEX",
                    "manufacturer": "KAISAI",
                    "serialNumber": "HIBWCDUIYHWASDAE",
                    "connected": true,
                    "homeId": 1
                  - "id": 3,
                    "type": "AIR_HUMIDITY",
                    "name": "Nawilżacz powietrza HU4801/01",
                    "manufacturer": "PHILIPS",
                    "serialNumber": "HIBWCDUIYHWASDAF",
                    "connected": true,
                    "homeId": 1
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                type: string
              example: Wrong house
  /homeFunctionalDevices:
    servers:
      - url: https://localhost:8081/api/data
    get:
      tags:
        - Get all functional devices in home
      summary: "Functional devices in home"
      operationId: "getHomeFunctionalDevices"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FunctionalDevice'
                example:
                  - "id": 1,
                    "type": "AIR_FILTER",
                    "name": "Dual Scan AC3858/51",
                    "manufacturer": "PHILIPS",
                    "serialNumber": "HIBWCDUIYHWASDAD",
                    "consumedElectricity": 60,
                    "createdAt": "2022-11-01",
                    "connected": true,
                    "homeId": 1
                  - "id": 2,
                    "type": "AIR_CONDITIONER",
                    "name": "Klimatyzator ścienny ECO KEX",
                    "manufacturer": "PHILIPS",
                    "serialNumber": "HIBWCDUIYHWASDAE",
                    "connected": true,
                    "homeId": 1
                  - "id": 3,
                    "type": "AIR_HUMIDIFIER",
                    "name": "Nawilżacz powietrza HU4801/01",
                    "manufacturer": "PHILIPS",
                    "serialNumber": "HIBWCDUIYHWASDAF",
                    "connected": true,
                    "homeId": 1
        "400":
          description: "Bad request"
          content:
            text/plain:
              schema:
                type: string
              example: Wrong house

  /air-quality:
    servers:
      - url: https://localhost:8080/api/control
    post:
      tags:
        - Actions (/api/control)
      summary: "Set target Air Quality"
      operationId: "setTargetAirQuality"
      parameters:
        - name: "target"
          in: "query"
          description: "Target air quality PM2,5 [μg/m3]"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /setHouseTemperature:
    servers:
      - url: https://localhost:8081/api/data
    post:
      tags:
        - Set Preferred Temp in House
      summary: " Set Preferred Temp"
      operationId: "setHouseTemperature"
      parameters:
        - name: "houseTemperature"
          in: "query"
          description: "Target humidity [%]"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Temperature must be between 0 and 30 degrees"
          content:
            '*/*':
              schema:
                type: "object"
  /setHouseHumidity:
    servers:
      - url: https://localhost:8081/api/data
    post:
      tags:
        - Set Preferred Hum in House
      summary: " Set Preferred Hum"
      operationId: "setHouseHumidity"
      parameters:
        - name: "houseHumidity"
          in: "query"
          description: "Target humidity [%]"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Humidity must be between 30 and 70 percent"
          content:
            '*/*':
              schema:
                type: "object"
  /humidity:
    servers:
      - url: https://localhost:8080/api/control
    post:
      tags:
        - Actions (/api/control)
      summary: "Set target humidity"
      operationId: "setTargetHumidity"
      parameters:
        - name: "target"
          in: "query"
          description: "Target humidity [%]"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /temperature:
    servers:
      - url: https://localhost:8080/api/control
    post:
      tags:
        - Actions (/api/control)
      summary: "Set target temperature"
      operationId: "setTargetTemperature"
      parameters:
        - name: "target"
          in: "query"
          description: "Target temperature 	[°C]"
          required: true
          schema:
            type: "number"
            format: "double"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"

components:
  schemas:
    Temperature:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        value:
          type: number
        createdAt:
          type: string
        sensorId:
          type: integer
      example:
        id: 1
        type: CELSIUS
        value: 24.0
        createdAt: "2022-11-08 21:07:44"
        "sensorId": 2
    AirQuality:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum: [IAI, PM25, GAS]
        value:
          type: number
        createdAt:
          type: string
        sensorId:
          type: integer

    Humidity:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        value:
          type: number
        createdAt:
          type: string
        sensorId:
          type: integer
      example:
        id: 1
        type: HUMIDITY
        value: 56
        createdAt: "2022-11-08 21:07:44"
        "sensorId": 3

    Measurement:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        value:
          type: number
        createdAt:
          type: string
        sensorId:
          type: integer
      example:
        id: 1
        type: HUMIDITY
        value: 56
        createdAt: "2022-11-08 21:07:44"
        "sensorId": 3
    Sensor:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum: [ AIR_POLLUTION, TEMPERATURE, AIR_HUMIDITY ]
        name:
          type: string
        manufacturer:
          type: string
        serialNumber:
          type: string
        createdAt:
          type: string
        isConnected:
          type: boolean
        homeId:
          type: integer
    FunctionalDevice:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum: [ AIR_FILTER, AIR_CONDITIONER, AIR_HUMIDIFIER ]
        name:
          type: string
        manufacturer:
          type: string
        serialNumber:
          type: string
        consumedElectricity:
          type: integer
        connected:
          type: boolean
        createdAt:
          type: string
        homeId:
          type: integer
    Home:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        street:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        preferredTemp:
          type: integer
        preferredHum:
          type: integer