version: '3.9'

services:
  postgres-app:
    build:
      context: ../postgres
      dockerfile: Dockerfile
    container_name: Selenium_SmartHome_App_Database
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - seleniumPostgresApp:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: SmartHomeApp
      POSTGRES_USER: SmartHomeAdminUser
      POSTGRES_PASSWORD: SmartHomeAdminPassword1
      APP_USER_USERNAME: SmartHomeUser
      APP_USER_PASSWORD: SmartHomePassword
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d SmartHomeApp -U SmartHomeUser" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-keycloak:
    image: postgres:14.1-alpine
    container_name: Selenium_SmartHome_Keycloak_Database
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - seleniumPostgresKeycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloakUser
      POSTGRES_PASSWORD: keycloakPassword1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d keycloak -U keycloakUser" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:15.0.0
    container_name: Selenium_Keycloak-Server-Instance
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    ports:
      - "8180:8180"
    command:
      - "-Djboss.socket.binding.port-offset=100"
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
    volumes:
      - ../keycloak/realm-selenium:/opt/jboss/keycloak/imports
    environment:
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloakUser
      DB_PASSWORD: keycloakPassword1
      #During first starting of the volumes, please use:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Password1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://keycloak:8180/auth/" ]
      interval: 5s
      timeout: 2s
      retries: 15

  data-service:
    build:
      dockerfile: Data-Service/Dockerfile
      context: ../../
    container_name: Selenium_Data-Service
    ports:
      - "8081:8081"
    depends_on:
      postgres-app:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      PORT: 8081
      KEYCLOAK_URL: 'http://keycloak:8180'
      KEYCLOAK_REALM: 'SmartHome'
      DATABASE_URL: 'postgres-app:5432'
      DATABASE_NAME: 'SmartHomeApp'
      DATABASE_USERNAME: 'SmartHomeUser'
      DATABASE_PASSWORD: 'SmartHomePassword'
      API_DEFAULT_PATH: '/api/data'

  control-service:
    build:
      dockerfile: Control-Service/Dockerfile
      context: ../../
    container_name: Selenium_Control-Service
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      KEYCLOAK_URL: 'http://keycloak:8180'
      KEYCLOAK_REALM: 'SmartHome'
      API_DEFAULT_PATH: '/api/control'
      DATA_SERVICE_URL: 'http://data-service:8081/api/data'
      AIR_CONDITIONER_URL: 'http://air-conditioning:8083'
      AIR_HUMIDIFIER_URL: 'http://air-humidifier:8082'
      AIR_FILTER_URL: 'http://air-filter:8084'
      REST_TEMPLATE_CLIENT_ID: 'smarthome-internal'
      REST_TEMPLATE_CLIENT_SECRET: '5b4832ed-242d-454f-8d8d-474264454c13'

  air-humidifier:
    build:
      dockerfile: Air-Humidifier/Dockerfile
      context: ../../
    container_name: Selenium_Air-Humidifier
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      DATA_SERVICE_URL: 'http://data-service:8081/api/data'
      FUNCTIONAL_DEVICE_SERIAL_NUMBER: HIBWCDUIYHWASDAF

  air-filter:
    build:
      dockerfile: Air-Filter/Dockerfile
      context: ../../
    container_name: Selenium_Air-Filter
    ports:
      - "8084:8084"
    environment:
      PORT: 8084
      DATA_SERVICE_URL: 'http://data-service:8081/api/data'
      FUNCTIONAL_DEVICE_SERIAL_NUMBER: HIBWCDUIYHWASDAD
      
  air-conditioning:
    build:
      dockerfile: Air-Conditioning/Dockerfile
      context: ../../
    container_name: Selenium_Air-Conditioning
    ports:
      - "8083:8083"
    environment:
      PORT: 8083
      DATA_SERVICE_URL: 'http://data-service:8081/api/data'
      FUNCTIONAL_DEVICE_SERIAL_NUMBER: HIBWCDUIYHWASDAE

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: Selenium_FrontEnd
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "3000:80"
    environment:
      NODE_ENV: production
      REACT_APP_KEYCLOAK_URL: 'http://79.110.202.145:8180'
      REACT_APP_FRONTEND_URL: 'http://79.110.202.145'
      DATA_API_PATH: 'http://79.110.202.145:8081/api/data'
      CONTROL_API_PATH: 'http://79.110.202.145:8080/api/control'

  selenium-hub:
    image: selenium/hub:latest
    container_name: Selenium-Hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"

  selenium-chrome:
    image: selenium/node-chrome:beta
    shm_size: 2gb
    container_name: Selenium-Chrome
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=Selenium-Hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  selenium-chrome-videos:
    image: selenium/video:ffmpeg-4.3.1-20221219
    container_name: Selenium-Chrome-Videos
    volumes:
      - ../../Selenium-Tests/tests:/videos
    depends_on:
      - selenium-chrome
    environment:
      - DISPLAY_CONTAINER_NAME=Selenium-Chrome
      - FILE_NAME=test_chrome_video.mp4

volumes:
  seleniumPostgresKeycloak:
    driver: local
  seleniumPostgresApp:
    driver: local